-- 1. Retrieve the total number of orders placed.

SELECT 
    COUNT(ORDER_ID) AS TOTAL_NO_OF_ORDERS
FROM
    ORDERS;
    
-- 2. Calculate the todoctorstal revenue generated from pizza sales.

SELECT 
    ROUND(SUM(OD.QUANTITY * P.PRICE), 2) AS TOTAL_REVENUE
FROM
    ORDER_DETAILS AS OD
        JOIN
    PIZZA AS P ON OD.PIZZA_ID = P.PIZZA_ID;
    
-- 3. Identify the highest-priced pizza.

SELECT 
    PT.NAME, PRICE AS PRICE
FROM
    PIZZA AS P
        JOIN
    PIZZA_TYPES AS PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
ORDER BY PRICE DESC
LIMIT 1;


-- 4.Identify the most common pizza size ordered.

SELECT 
    P.SIZE, COUNT(OD.ORDER_DETAILS_ID) AS COUNT_OF_COMMON_PIZZA
FROM
    ORDER_DETAILS AS OD
        JOIN
    PIZZA AS P ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY P.SIZE
ORDER BY COUNT_OF_COMMON_PIZZA DESC;

-- 5. List the top 5 most ordered pizza types along with their quantities.

SELECT 
    PT.NAME, SUM(OD.QUANTITY) AS ORDERED_QUANTITY
FROM
    PIZZA_TYPES AS PT
        JOIN
    PIZZA AS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
        JOIN
    ORDER_DETAILS AS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY PT.NAME
ORDER BY ORDERED_QUANTITY DESC
LIMIT 5;

-- 6.Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT 
    PT.CATEGORY, SUM(OD.QUANTITY) AS TOTAL_QUANTITY_PER_CATEGORY
FROM
    PIZZA_TYPES AS PT
        JOIN
    PIZZA AS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
        JOIN
    ORDER_DETAILS AS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY PT.CATEGORY
ORDER BY TOTAL_QUANTITY_PER_CATEGORY DESC;

-- 7. Determine the distribution of orders by hour of the day.

SELECT 
    HOUR(ORDER_TIME) AS ORDER_TIME,
    COUNT(OD.ORDER_ID) AS ORDERS_PLACED
FROM
    ORDERS AS O
        JOIN
    ORDER_DETAILS AS OD ON O.ORDER_ID = OD.ORDER_ID
GROUP BY HOUR(ORDER_TIME)
ORDER BY O.ORDER_TIME ASC;

-- 8. Join relevant tables to find the 
--    category-wise distribution of pizzas.

SELECT 
    CATEGORY,
    COUNT(PIZZA_TYPE_ID) AS NO_OF_PIZZA_TYPE_PER_CATEGORY
FROM
    PIZZA_TYPES
GROUP BY CATEGORY;

-- 9.Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT 
    ROUND(AVG(PIZZA_ORDERED), 0) AS AVG_PIZZA_ORDERED_PER_DAY
FROM
    (SELECT 
        O.ORDER_DATE, SUM(OD.QUANTITY) AS PIZZA_ORDERED
    FROM
        ORDERS AS O
    JOIN ORDER_DETAILS AS OD ON O.ORDER_ID = OD.ORDER_ID
    GROUP BY O.ORDER_DATE) AS SUM_PIZZA;
    
-- 10. Determine the top 3 most ordered pizza types based on revenue.

SELECT 
    PT.NAME, SUM(QUANTITY * PRICE) AS TOTAL_REVENUE
FROM
    PIZZA_TYPES AS PT
        JOIN
    PIZZA AS P ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
        JOIN
    ORDER_DETAILS AS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY PT.NAME
ORDER BY TOTAL_REVENUE DESC
LIMIT 3;

-- 11. Calculate the percentage contribution of each pizza type to total revenue.

SELECT 
    PT.CATEGORY,
    ROUND(SUM(OD.QUANTITY * P.PRICE) / (SELECT 
            ROUND(SUM(OD.QUANTITY * P.PRICE), 2) AS TOTAL_REVENUE
        FROM
            ORDER_DETAILS AS OD
                JOIN
            PIZZA AS P ON OD.PIZZA_ID = P.PIZZA_ID) * 100,2) AS PERCENTAGE_OF_REVENUE
FROM
    PIZZA_TYPES AS PT
        JOIN
    PIZZA AS P ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
        JOIN
    ORDER_DETAILS AS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY PT.CATEGORY
ORDER BY PERCENTAGE_OF_REVENUE DESC;

-- 12. Analyze the cumulative revenue generated over time.

SELECT 
	ORDER_DATE,ROUND(REVENUE,2) AS DAILY_REVENUE, 
	ROUND(SUM(REVENUE) OVER(ORDER BY ORDER_DATE),2) AS CUMMULATIVE_REVENUE 
FROM
	(SELECT 
    O.ORDER_DATE, SUM(OD.QUANTITY * P.PRICE) AS REVENUE
	FROM
    ORDER_DETAILS AS OD
	JOIN
    PIZZA AS P ON OD.PIZZA_ID = P.PIZZA_ID
	JOIN
    ORDERS AS O ON O.ORDER_ID = OD.ORDER_ID
	GROUP BY O.ORDER_DATE) AS SALES;
    
-- 13. Determine the top 3 most ordered pizza types based on revenue for each pizza category.

WITH CTE AS (
	SELECT 
		CATEGORY, NAME, REVENUE, RANK() OVER(PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS LIST
	FROM (
		SELECT 
			NAME, CATEGORY, ROUND(SUM(QUANTITY*PRICE),2) AS REVENUE
		FROM PIZZA_TYPES AS PT
		JOIN PIZZA AS P
		ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
		JOIN ORDER_DETAILS AS OD
		ON OD.PIZZA_ID = P.PIZZA_ID
		GROUP BY PT.NAME, PT.CATEGORY
		ORDER BY CATEGORY,PT.NAME) AS TEMP)

SELECT CATEGORY, NAME, REVENUE FROM CTE WHERE LIST<=3;
